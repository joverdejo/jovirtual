{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","id","beat","octave","sampler1","Tone","urls","A1","A2","baseUrl","toDestination","sampler2","C1","C2","sampler3","D1","E1","F1","G1","sampler4","clockExists","delay","delayVal","subdivisionVal","dv","sv","submitDelayTime","bind","submitDelaySubdivision","changeDelayTime","changeDelaySubdivision","this","time","setState","parseInt","console","log","start","event","target","value","num","alert","preventDefault","n","s","triggerAttackRelease","connect","sampleNum","className","onClick","addNote","String","makePiano","onSubmit","type","onChange","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAIqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAEXC,GAAI,GAEJC,KAAM,EAENC,OAAQ,EAERC,SAAU,IAAIC,IAAa,CACzBC,KAAM,CACJC,GAAI,SACJC,GAAI,UAENC,QAAS,0CACRC,gBAEHC,SAAU,IAAIN,IAAa,CACzBC,KAAM,CACJM,GAAI,WACJC,GAAI,cAENJ,QAAS,yCACRC,gBAEHI,SAAU,IAAIT,IAAa,CACzBC,KAAM,CACJM,GAAI,YACJG,GAAI,WACJC,GAAI,YACJC,GAAI,WACJC,GAAI,WACJX,GAAI,YAENE,QAAS,uDACRC,gBAEHS,SAAU,IAAId,IAAa,CACzBC,KAAM,CACJC,GAAI,SACJC,GAAI,UAENC,QAAS,+CACRC,gBAEHU,aAAa,EAEbC,MAAO,IAAIhB,IAAmB,KAAM,IAAKK,gBAEzCY,SAAU,GAEVC,eAAgB,KAEhBC,GAAI,GAEJC,GAAI,IAGN,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,uBAAyB,EAAKA,uBAAuBD,KAA5B,gBAC9B,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBACvB,EAAKG,uBAAyB,EAAKA,uBAAuBH,KAA5B,gBA9Db,E,qDAiEnB,WAAqB,IAAD,OACbI,KAAK/B,MAAMoB,cACA,IAAIf,KAAW,SAAA2B,GAC3B,EAAKC,SAAS,CAAE/B,KAAMgC,SAASF,GAAQ,EAAI,IAC3CG,QAAQC,IAAI,EAAKpC,MAAME,QACtB,GACGmC,QACNN,KAAKE,SAAS,CAAEb,aAAa,KAE/Be,QAAQC,IAAI,c,6BAId,SAAgBE,GACdP,KAAKE,SAAS,CAACT,GAAIc,EAAMC,OAAOC,U,oCAGlC,SAAuBF,GACrBP,KAAKE,SAAS,CAACR,GAAIa,EAAMC,OAAOC,U,6BAIlC,SAAgBF,GACd,IAAIG,EAAMV,KAAK/B,MAAMwB,GACjBiB,GAAO,GAAKA,EAAM,EAAGC,MAAM,uCAC1BX,KAAKE,SAAS,CAACZ,MAAO,IAAIhB,IAAmB0B,KAAK/B,MAAMuB,eAAgBkB,GAAK/B,gBAAgBY,SAASmB,IAC3GH,EAAMK,mB,oCAGR,SAAuBL,GACrB,IAAIG,EAAMV,KAAK/B,MAAMyB,GAAK,IACtBgB,EAAM,EAAGC,MAAM,+BACdX,KAAKE,SAAS,CAACZ,MAAO,IAAIhB,IAAmBoC,EAAKV,KAAK/B,MAAMsB,UAAUZ,gBAAgBa,eAAekB,IAC3GH,EAAMK,mB,qBAGR,SAAQC,EAAGC,GACC,IAAND,GAASb,KAAK/B,MAAMI,SAAS0C,qBAAqB,CAACD,GAAI,IAAKE,QAAQhB,KAAK/B,MAAMqB,OACzE,IAANuB,GAASb,KAAK/B,MAAMW,SAASmC,qBAAqB,CAACD,GAAI,IAAKE,QAAQhB,KAAK/B,MAAMqB,OACzE,IAANuB,GAASb,KAAK/B,MAAMc,SAASgC,qBAAqB,CAACD,GAAI,IACjD,IAAND,GAASb,KAAK/B,MAAMmB,SAAS2B,qBAAqB,CAACD,GAAI,IAAKE,QAAQhB,KAAK/B,MAAMqB,S,uBAGrF,SAAU2B,GAAY,IAAD,OACnB,OACE,sBAAKC,UAAU,eAAf,UACE,wBAAQA,UAAU,OAAOC,QAAS,kBAAM,EAAKC,QAAQH,EAAW,IAAMI,OAAO,EAAKpD,MAAMG,UAAxF,eAGA,wBAAQ8C,UAAU,OAAOC,QAAS,kBAAM,EAAKC,QAAQH,EAAW,IAAMI,OAAO,EAAKpD,MAAMG,UAAxF,eAGA,wBAAQ8C,UAAU,OAAOC,QAAS,kBAAM,EAAKC,QAAQH,EAAW,IAAMI,OAAO,EAAKpD,MAAMG,UAAxF,eAGA,wBAAQ8C,UAAU,OAAOC,QAAS,kBAAM,EAAKC,QAAQH,EAAW,IAAMI,OAAO,EAAKpD,MAAMG,UAAxF,eAGA,wBAAQ8C,UAAU,OAAOC,QAAS,kBAAM,EAAKC,QAAQH,EAAW,IAAMI,OAAO,EAAKpD,MAAMG,UAAxF,eAGA,wBAAQ8C,UAAU,OAAOC,QAAS,kBAAM,EAAKC,QAAQH,EAAW,IAAMI,OAAO,EAAKpD,MAAMG,UAAxF,eAGA,wBAAQ8C,UAAU,OAAOC,QAAS,kBAAM,EAAKC,QAAQH,EAAW,IAAMI,OAAO,EAAKpD,MAAMG,UAAxF,eAGA,wBAAQ8C,UAAU,OAAOC,QAAS,kBAAM,EAAKC,QAAQH,EAAW,IAAMI,OAAO,EAAKpD,MAAMG,OAAS,KAAjG,oB,oBAON,WACE,OACE,sBAAK8C,UAAU,MAAf,UACGlB,KAAKsB,UAAU,GACftB,KAAKsB,UAAU,GACftB,KAAKsB,UAAU,GACftB,KAAKsB,UAAU,GAChB,uBAAMC,SAAUvB,KAAKL,gBAArB,UACE,gDAEA,uBAAO6B,KAAK,OAAOf,MAAOT,KAAK/B,MAAMwB,GAAIgC,SAAUzB,KAAKF,qBAExD,uBAAO0B,KAAK,SAASf,MAAM,cAG7B,uBAAMc,SAAUvB,KAAKH,uBAArB,UACE,uDAEA,uBAAO2B,KAAK,OAAOf,MAAOT,KAAK/B,MAAMyB,GAAI+B,SAAUzB,KAAKD,4BAExD,uBAAOyB,KAAK,SAASf,MAAM,qB,GAhKJiB,IAAMC,WCQxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.28c061fd.chunk.js","sourcesContent":["import React from \"react\";\nimport * as Tone from \"tone\";\n//samples from https://github.com/Tonejs/audio\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      id: '',\n  \n      beat: 1,\n  \n      octave: 1,\n  \n      sampler1: new Tone.Sampler({\n        urls: {\n          A1: \"A1.mp3\",\n          A2: \"A2.mp3\",\n        },\n        baseUrl: \"https://tonejs.github.io/audio/casio/\",\n      }).toDestination(),\n  \n      sampler2: new Tone.Sampler({\n        urls: {\n          C1: \"bass.mp3\",\n          C2: \"chords.mp3\",\n        },\n        baseUrl: \"https://tonejs.github.io/audio/loop/\",\n      }).toDestination(),\n  \n      sampler3: new Tone.Sampler({\n        urls: {\n          C1: \"hihat.mp3\",\n          D1: \"kick.mp3\",\n          E1: \"snare.mp3\",\n          F1: \"tom1.mp3\",\n          G1: \"tom2.mp3\",\n          A1: \"tom3.mp3\",\n        },\n        baseUrl: \"https://tonejs.github.io/audio/drum-samples/Stark/\",\n      }).toDestination(),\n  \n      sampler4: new Tone.Sampler({\n        urls: {\n          A1: \"A1.mp3\",\n          A2: \"A2.mp3\",\n        },\n        baseUrl: \"https://tonejs.github.io/audio/salamander/\",\n      }).toDestination(),\n  \n      clockExists: false,\n    \n      delay: new Tone.FeedbackDelay(\"8n\", 0.5).toDestination(),\n\n      delayVal: 0.5,\n      \n      subdivisionVal: \"8n\",\n\n      dv: \"\",\n\n      sv: \"\"\n  \n    };\n    this.submitDelayTime = this.submitDelayTime.bind(this);\n    this.submitDelaySubdivision = this.submitDelaySubdivision.bind(this);\n    this.changeDelayTime = this.changeDelayTime.bind(this);\n    this.changeDelaySubdivision = this.changeDelaySubdivision.bind(this);\n  }\n  \n  componentDidMount() {\n    if (!this.state.clockExists) {\n      const clock = new Tone.Clock(time => {\n        this.setState({ beat: parseInt(time) % 4 + 1 });\n        console.log(this.state.beat);\n      }, 1);\n      clock.start();\n      this.setState({ clockExists: true })\n    }\n    console.log(\"Mounted!\")\n  };\n\n \n  changeDelayTime(event) {\n    this.setState({dv: event.target.value});\n  }\n\n  changeDelaySubdivision(event) {\n    this.setState({sv: event.target.value});\n  }\n\n\n  submitDelayTime(event) {\n    var num = this.state.dv;\n    if (num >= 1 || num < 0) alert(\"please use numbers betweeen 0 and 1\");\n    else this.setState({delay: new Tone.FeedbackDelay(this.state.subdivisionVal, num).toDestination(),delayVal:num});\n    event.preventDefault();\n  }\n\n  submitDelaySubdivision(event) {\n    var num = this.state.sv + \"n\";\n    if (num < 0) alert(\"please use positive numbers\");\n    else this.setState({delay: new Tone.FeedbackDelay(num, this.state.delayVal).toDestination(),subdivisionVal:num});\n    event.preventDefault();\n  }\n\n  addNote(n, s) {\n    if (n === 1) this.state.sampler1.triggerAttackRelease([s], 0.5).connect(this.state.delay);\n    if (n === 2) this.state.sampler2.triggerAttackRelease([s], 0.5).connect(this.state.delay);\n    if (n === 3) this.state.sampler3.triggerAttackRelease([s], 0.5);\n    if (n === 4) this.state.sampler4.triggerAttackRelease([s], 0.5).connect(this.state.delay);\n  };\n\n  makePiano(sampleNum) {\n    return (\n      <div className=\"note-wrapper\">\n        <button className=\"note\" onClick={() => this.addNote(sampleNum, \"C\" + String(this.state.octave))}>\n          C\n        </button>\n        <button className=\"note\" onClick={() => this.addNote(sampleNum, \"D\" + String(this.state.octave))}>\n          D\n        </button>\n        <button className=\"note\" onClick={() => this.addNote(sampleNum, \"E\" + String(this.state.octave))}>\n          E\n        </button>\n        <button className=\"note\" onClick={() => this.addNote(sampleNum, \"F\" + String(this.state.octave))}>\n          F\n        </button>\n        <button className=\"note\" onClick={() => this.addNote(sampleNum, \"G\" + String(this.state.octave))}>\n          G\n        </button>\n        <button className=\"note\" onClick={() => this.addNote(sampleNum, \"A\" + String(this.state.octave))}>\n          A\n        </button>\n        <button className=\"note\" onClick={() => this.addNote(sampleNum, \"B\" + String(this.state.octave))}>\n          B\n        </button>\n        <button className=\"note\" onClick={() => this.addNote(sampleNum, \"C\" + String(this.state.octave + 1))}>\n          C\n        </button>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.makePiano(1)}\n        {this.makePiano(4)}\n        {this.makePiano(2)}\n        {this.makePiano(3)}\n        <form onSubmit={this.submitDelayTime}>\n          <label>\n          Delay Time:\n          <input type=\"text\" value={this.state.dv} onChange={this.changeDelayTime}/>\n          </label>\n          <input type=\"submit\" value=\"Submit\"/>\n        </form>\n\n        <form onSubmit={this.submitDelaySubdivision}>\n          <label>\n          Delay Subdivision: \n          <input type=\"text\" value={this.state.sv} onChange={this.changeDelaySubdivision}/>\n          </label>\n          <input type=\"submit\" value=\"Submit\"/>\n        </form>\n      </div>\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}