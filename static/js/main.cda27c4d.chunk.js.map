{"version":3,"sources":["Components/TonePad.js","App.js","reportWebVitals.js","index.js"],"names":["TonePad","pad","useRef","loopBeat","clientX","clientY","clientXNorm","clientYNorm","clientYBucket","deltaY","beat","pitches","melody","pitchDictC","filter","Tone","verb","decay","wet","delay","s1","volume","urls","A1","A2","baseUrl","chain","sendData","fetch","method","body","JSON","stringify","x","current","y","userId","headers","then","response","ok","json","Promise","reject","data","uid","other_uid","triggerAttackRelease","processSounds","console","log","catch","error","warn","toDestination","song","time","i","push","toFrequency","makeMelody","window","innerHeight","innerWidth","prev","Math","abs","set","value","frequency","rhythm","parseInt","toString","length","handleTouchStart","e","touches","style","boxShadow","start","bpm","zigzag","v","high","handleTouchMove","a","b","document","backgroundColor","handleTouchEnd","stop","id","ref","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","className","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cda27c4d.chunk.js","sourcesContent":["\nimport '../Styles/TonepadStyle.css'\nimport { React, useRef } from 'react';\nimport * as Tone from 'tone';\n\nfunction TonePad() {\n  const pad = useRef(null);\n  const loopBeat = useRef(null);\n  const clientX = useRef(null);\n  const clientY = useRef(null);\n  const clientXNorm = useRef(null);\n  const clientYNorm = useRef(null);\n  const clientYBucket = useRef(null);\n  const deltaY = useRef(null);\n  var beat = useRef(0);\n  var pitches = useRef(0);\n  const melody = useRef([100,200,150,250,400,400,300,100]);\n  const pitchDictM = {\"0\":[60],\"1\":[62],\"2\":[64],\"3\":[65],\"4\":[67],\"5\":[69],\"6\":[71],\"7\":[72],\n                      \"8\":[74],\"9\":[75],\"A\":[77],\"B\":[79],\"C\":[81],\"D\":[82],\"E\":[84],\"F\":[85]}\n  const pitchDictC = {\"0\":[53],\"1\":[54],\"2\":[55],\"3\":[56],\"4\":[57],\"5\":[58],\"6\":[59],\"7\":[60],\n                      \"8\":[61],\"9\":[62],\"A\":[63],\"B\":[64],\"C\":[65],\"D\":[66],\"E\":[67],\"F\":[68]}\n\n  // const distortion = new Tone.Distortion();\n  const filter = new Tone.Filter(1500, \"lowpass\");\n  const verb = new Tone.Reverb({decay:10, wet:0.3});\n  const delay = new Tone.FeedbackDelay(\"8n\", 0.7);\n  const s1 = useRef(new Tone.Sampler({\n    volume: -10,\n    urls: {\n      A1: \"A1.mp3\",\n      A2: \"A2.mp3\",\n    },\n    baseUrl: \"https://tonejs.github.io/audio/casio/\",\n  }).chain(filter,verb,delay, Tone.Master));\n\n  const s2 =  useRef(new Tone.Sampler({\n    volume: -10,\n    urls: {\n      A1: \"A1.mp3\",\n      A2: \"A2.mp3\",\n    },\n    baseUrl: \"https://tonejs.github.io/audio/salamander/\",\n  }).toDestination());\n\n  function processSounds(data,uid){\n    for (var other_uid in data){\n      // console.log(other_uid);\n      if (other_uid == uid ) continue;\n      s1.current.triggerAttackRelease((data[other_uid][\"x\"] + data[other_uid][\"y\"]) % 500, 0.9);\n    }\n  }\n\n  function makeMelody(){\n    //assuming that n is a string, each element is between 0-9\n    melody.current = []  \n    pitches.current = \"2369FE90\";\n      console.log(\"making melody\")\n      for (var i in pitches.current){\n        melody.current.push(Tone.Frequency(pitchDictC[pitches.current[i]],\"midi\").toFrequency())\n      }\n  }\n  function sendData(){\n    // fetch('/coords')\n    //   .then(response => {\n    //     if (response.ok) {\n    //       return response.json();\n    //     }\n    //   }).then(data => {\n    //     if (data) {\n    //       console.log(data);\n    //     }\n    //   }).catch(err => console.error(err));\n    var uid = 12345\n    fetch('https://jovirtual.herokuapp.com/jovirtual/coords', {\n      method: 'POST',\n      body: JSON.stringify({\n        x: clientX.current,\n        y: clientY.current,\n        userId: clientY.current\n      }),\n      headers: {\n        'mode': 'no-cors',\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(response);\n    }).then(function (data) {\n      processSounds(data,uid);\n      console.log(data);\n    }).catch(function (error) {\n      console.warn('Something went wrong.', error);\n    });\n  }\n\n  const song = (time) => {\n    makeMelody();\n    beat.current = (beat.current + 1) % 8\n    clientYNorm.current = 1-clientY.current/window.innerHeight\n    clientXNorm.current = clientX.current/window.innerWidth\n    var prev = clientYBucket.current\n    clientYBucket.current = Math.abs((clientYBucket.current + deltaY.current)/150) * 0.9 > 1 ? \n    1 : Math.abs((clientYBucket.current + deltaY.current)/150) * 0.9;\n    sendData()\n    clientYBucket.current = 0.95*prev + clientYBucket.current*(1-0.95)\n    console.log(clientYBucket.current)\n    //s1.current.set({volume:clientYBucket.current})\n    delay.set({wet:(delay.wet.value+clientYBucket.current)/2})\n    filter.set({frequency: (clientYNorm.current**2)*15000+400});\n    var rhythm = (parseInt(clientXNorm.current*256)).toString(2);\n    while (rhythm.length < 8) rhythm = \"0\"+rhythm\n    console.log(rhythm);\n    if (rhythm[beat.current] === \"1\"){ \n      s1.current.triggerAttackRelease(melody.current[beat.current], 0.9);\n    }\n\n  };\n\n\n  //---------Handle TOUCH START\n  const handleTouchStart = (e) => {\n    if (e.touches != null) {\n      clientY.current = Math.abs(e.touches[0].clientY);\n      clientX.current = Math.abs(e.touches[0].clientX);\n    }\n    else {\n      clientY.current = Math.abs(e.clientY);\n      clientX.current = Math.abs(e.clientX);\n    }\n    if (clientX.current == null) {\n      clientX.current = 440\n    }\n    if (clientY.current == null) {\n      clientY.current = 440\n    }\n    // pointer.current.style.visibility = \"visible\"\n    // pointer.current.style.transform = `translate(${clientX}px, ${clientY }px)`\n\n    pad.current.style.boxShadow = \"inset 0 0 30px #000000\"\n\n    if (loopBeat.current == null) {\n      loopBeat.current = new Tone.Loop(song, '16n');\n    }\n    loopBeat.current.start(0)\n    // osc.connect(filterLow);\n    // osc.start();\n    // osc.frequency.value = clientY;\n    // filterLow.frequency.value = clientX + 300;\n\n    Tone.Transport.bpm.value = 120\n    Tone.start()\n    Tone.Transport.start()\n\n  };\n\n  //helper\n  const zigzag = (v, high) => {\n    return Math.abs(high - Math.abs((high - v % (2 * high))))\n  };\n\n\n  //---------Handle TOUCH MOVE\n  const handleTouchMove = (e) => {\n    \n    if (e.touches != null) {\n      deltaY.current = Math.abs(e.touches[0].clientY)-clientY.current \n      clientY.current = Math.abs(e.touches[0].clientY);\n      clientX.current = Math.abs(e.touches[0].clientX);\n    }\n    else {\n      deltaY.current = Math.abs(e.clientY)-clientY.current \n      clientY.current = parseInt(Math.abs(e.clientY));\n      clientX.current = parseInt(Math.abs(e.clientX));\n    }\n    //mod each 3 digits of id here\n    \n    var a = zigzag(clientX.current, 255)\n    var b = zigzag(clientY.current, 255)\n    // var c = zigzag((clientX.current+clientY.current),255)\n    document.body.style.backgroundColor = `rgb(${a}, ${b}, 100)`;\n  };\n\n  //---------Handle TOUCH END\n  const handleTouchEnd = () => {\n    pad.current.style.boxShadow = \"inset 0 0 20px #000000\"\n    if (loopBeat.current == null) {\n    }\n    else {\n      loopBeat.current.stop()\n    }\n\n    Tone.Transport.stop()\n  };\n\n\n\n  return (\n    <div >\n      <div id=\"pad\" ref={pad}\n        onTouchStart={handleTouchStart} onTouchMove={handleTouchMove} onTouchEnd={handleTouchEnd}\n        onMouseDown={handleTouchStart} onMouseMove={handleTouchMove} onMouseUp={handleTouchEnd} className=\"app\">\n      </div>\n    </div>\n  );\n}\n\nexport default TonePad;\n","import './App.css';\nimport React from 'react'\n\nimport TonePad from './Components/TonePad.js'\n\nfunction App() {\n\n  return (\n    \n    <div className=\"App-body\">\n      <div id=\"welcome\" className=\"welcome\">\n        <h1>welcome to jovirtual</h1>\n        <p>press and hold anywhere to create</p>\n        <p>(if on mobile, make sure ringer is on)</p>\n        </div>\n        <TonePad />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}